m^3, "/", s,
")", sep="")))+
ggtitle("Bow River Discharge: Model Prediction Efficiency")+
scale_x_discrete(labels=c("No Error","Error"))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
sA %>%
ggplot(aes(y=outcome,x=error))+
geom_boxplot()+
geom_jitter(alpha=0.1,color="blue")+
xlab("Model Prediction")+
ylab (expression(paste(
"Actual Discharge (",
m^3, "/", s,
")", sep="")))+
ggtitle("Bow River Discharge Prediction Model")+
scale_x_discrete(labels=c("No Error","Error"))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
sA %>%
ggplot(aes(y=outcome,x=error))+
geom_boxplot()+
geom_jitter(alpha=0.1,color="blue")+
xlab("Model Prediction")+
ylab (expression(paste(
"Actual Discharge (",
m^3, "/", s,
")", sep="")))+
ggtitle("Bow River Discharge Prediction: Model Efficiency")+
scale_x_discrete(labels=c("No Error","Error"))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5))
sA %>%
ggplot(aes(y=outcome,x=error))+
geom_boxplot()+
geom_jitter(alpha=0.1,color="blue")+
labs(x="Model Prediction",
y=expression(paste(
"Actual Discharge (",
m^3, "/", s,
")", sep="")),
title="Bow River Discharge Forecast: Model Efficiency",
subtitle="When is the model prediction prone to error?",
caption="The model predicts discharge of the Bow River at Banff for the next day in cubic
metres per second. Model Forecast Validity, data is available for 542 data points. The plot
above illustrates the the tendency of model to fail when river discharge is significantly high")+
scale_x_discrete(labels=c("No Error","Error"))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5),
plot.caption=element_text(hjust = 0.5))
(sA <- read_csv("data/sA-error_prop.csv"))
suppressPackageStartupMessages(library(tidyverse))
(sA <- read_csv("data/sA-error_prop.csv"))
sA %>%
ggplot(aes(y=outcome,x=error))+
geom_boxplot()+
geom_jitter(alpha=0.1,color="blue")+
labs(x="Model Prediction",
y=expression(paste(
"Actual Discharge (",
m^3, "/", s,
")", sep="")),
title="Bow River Discharge Forecast: Model Efficiency",
subtitle="When is the model prediction prone to error?",
caption="The model predicts discharge of the Bow River at Banff for the next day in cubic
metres per second. Model Forecast Validity, data is available for 542 data points. The plot
above illustrates the the tendency of model to fail when river discharge is significantly high")+
scale_x_discrete(labels=c("No Error","Error"))+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5),
plot.caption=element_text(hjust = 0.5))
suppressPackageStartupMessages(library(tidyverse))
library(gapminder)
knitr::opts_chunk$set(fig.width=5, fig.height=3)
gapxy <- ggplot(gapminder, aes(lifeExp, gdpPercap)) +
theme_bw()
gapxy + geom_point()
gapxy <- gapxy + scale_y_log10()
gapxy + geom_point()
gapxy + geom_point(alpha=0.2)
gapxy + geom_hex()
gapxy + geom_density2d()
gapxy + facet_wrap(~continent) + geom_point(alpha=0.2)
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(tidyverse))
library(gapminder)
knitr::opts_chunk$set(fig.width=5, fig.height=3)
gapxy <- ggplot(gapminder, aes(lifeExp, gdpPercap)) +
theme_bw()
gapxy + geom_point()
gapxy <- gapxy + scale_y_log10()
gapxy + geom_point()
gapxy + geom_point(alpha=0.2)
gapxy + geom_hex()
gapxy + geom_density2d()
gapxy + facet_wrap(~continent) + geom_point(alpha=0.2)
gapxy <- ggplot(gapminder, aes(lifeExp, gdpPercap)) +
theme_bw()
gapxy <- ggplot(gapminder, aes(lifeExp, gdpPercap)) +
theme_bw()
gapxy + geom_point()
gapxy <- gapxy + scale_y_log10()
gapxy <- gapxy + scale_y_log10()
gapxy <- ggplot(gapminder, aes(lifeExp, gdpPercap)) +
theme_bw()
gapxy + geom_point()
gapxy <- gapxy + scale_y_log10()
gapxy <- ggplot(gapminder, aes(lifeExp, gdpPercap)) +
theme_bw()
gapxy + geom_point()
gapxy <- gapxy + scale_y_log10()
gapxy + geom_point()
gapxy <- ggplot(gapminder, aes(lifeExp, gdpPercap)) +
theme_bw()
gapxy + geom_point()
gapxy <- gapxy + scale_y_log10()
gapxy + geom_point()
gapxy + geom_point(alpha=0.2)
gapxy + geom_hex()
gapxy + geom_density2d()
gapxy + facet_wrap(~continent) + geom_point(alpha=0.2)
ggplot(gapminder, aes(continent, lifeExp)) +
geom_violin(fill="red", alpha=0.2) +
geom_boxplot(fill="blue", alpha=0.2) +
geom_jitter(alpha=0.2)
map_data("france") %>%
ggplot(aes(long, lat)) +
geom_polygon(aes(group=group), fill=NA, colour="black") +
theme_bw() +
ggtitle("Are lat and long really needed?")
ggplot(gapminder, aes(year, lifeExp)) +
geom_line(aes(group=country, colour=country), alpha=0.2) +
guides(colour=FALSE) +
theme_bw() +
ggtitle("Is colouring by country really necessary here?\nNevermind fitting the legend!")
HairEyeColor %>%
as_tibble() %>%
uncount(n) %>%
ggplot(aes(Hair)) +
facet_wrap(~Sex) +
geom_bar(aes(fill=Sex)) +
theme_bw() +
ggtitle("Don't do this.")
HairEyeColor %>%
as_tibble() %>%
uncount(n) %>%
ggplot(aes(Hair)) +
facet_wrap(~Sex) +
geom_bar(fill="#D95F02") +
theme_bw() +
ggtitle("Do this.")
HairEyeColor %>%
as_tibble() %>%
uncount(n) %>%
count(Hair) %>%
ggplot(aes(Hair, n)) +
geom_col() +
geom_text(aes(label=n), vjust=-0.1) +
theme_bw() +
labs(x="Hair colour", y="count",
title="Are the bar numbers AND y-axis really needed?")
plot_beav2 <- bind_rows(
mutate(beaver1, beaver = "Beaver 1"),
mutate(beaver2, beaver = "Beaver 2")
) %>%
group_by(beaver) %>%
summarize(med = median(temp)) %>%
ggplot(aes(beaver, med)) +
theme_bw() +
xlab("") +
ylab("Body Temperature\n(Celsius)")
cowplot::plot_grid(
plot_beav2 +
geom_col() +
ggtitle("Don't do this."),
plot_beav2 +
geom_point() +
ggtitle("Do this.")
)
plot_beav2 <- bind_rows(
mutate(beaver1, beaver = "Beaver 1"),
mutate(beaver2, beaver = "Beaver 2")
) %>%
group_by(beaver) %>%
summarize(med = median(temp)) %>%
ggplot(aes(beaver, med)) +
theme_bw() +
xlab("") +
ylab("Body Temperature\n(Celsius)")
cowplot::plot_grid(
plot_beav2 +
geom_col() +
ggtitle("Don't do this."),
plot_beav2 +
geom_point() +
ggtitle("Do this.")
)
instak
install.packages('cowplot')
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages(library(tidyverse))
library(gapminder)
knitr::opts_chunk$set(fig.width=5, fig.height=3)
plot_beav2 <- bind_rows(
mutate(beaver1, beaver = "Beaver 1"),
mutate(beaver2, beaver = "Beaver 2")
) %>%
group_by(beaver) %>%
summarize(med = median(temp)) %>%
ggplot(aes(beaver, med)) +
theme_bw() +
xlab("") +
ylab("Body Temperature\n(Celsius)")
cowplot::plot_grid(
plot_beav2 +
geom_col() +
ggtitle("Don't do this."),
plot_beav2 +
geom_point() +
ggtitle("Do this.")
)
```{r}
plot_iris <- ggplot(iris, aes(Sepal.Width, Sepal.Length)) +
geom_jitter(aes(colour=Species)) +
theme_bw() +
theme(legend.position = "bottom")
cowplot::plot_grid(
plot_iris +
scale_colour_manual(values=c("brown", "gray", "yellow")) +
ggtitle("Don't do this."),
plot_iris +
scale_colour_brewer(palette="Dark2") +
ggtitle("Leave it to an expert.\nDo this.")
)
plot_beav <- bind_rows(
mutate(beaver1, beaver = "Beaver 1"),
mutate(beaver2, beaver = "Beaver 2")
) %>%
ggplot(aes(beaver, temp)) +
geom_violin() +
geom_jitter(alpha=0.25) +
theme_bw() +
xlab("") +
ylab("Body Temperature\n(Celsius)")
cowplot::plot_grid(
plot_beav +
ggtitle("This."),
plot_beav +
ylim(c(0,NA)) +
ggtitle("Not This.")
)
HairEyeColor %>%
as_tibble() %>%
uncount(n) %>%
ggplot(aes(Hair)) +
geom_bar() +
theme_bw() +
ggtitle("Keep this starting from 0.")
ggplot(gapminder, aes(continent, lifeExp)) +
geom_boxplot() +
ylim(c(0, NA)) +
geom_hline(yintercept = 0,
linetype = "dashed")
```sql
CREATE TABLE People(
'personID' TEXT,
'firstName' TEXT,
'lastName' TEXT,
'dateBirth' TEXT,
'dateDeath' TEXT
);
```
```sql
-- TODO: Replace this comment with your answer.
CREATE TABLE Movies(
'movideID' TEXT,
'title' TEXT,
'year' INTEGER,
'runningTime' INTEGER,
'genre' TEXT,
'producer' TEXT,
'principal' TEXT,
PRIMARY KEY(movideID),
FOREIGN KEY(principle),
REFERENCES
INSERT
INTO Movies
VALUES ("m01", "Joe Black", 1998, 178, "Drama", "Universal Studio", "p01"),
("m02", "Titanic", 1997, 194, "Romance", "Universal Studio", "p01");
```
INSERT
INTO Movies
VALUES ("m01", "Joe Black", 1998, 178, "Drama", "Universal Studio", "p01"),
("m02", "Titanic", 1997, 194, "Romance", "Paramount Pictures", "p02"),
("m03", "The Shawshank Redemption", 1994, 194, "Romance", "Paramount Pictures", "p02"),
("m04", "Titanic", 1997, 194, "Romance", "Paramount Pictures", "p02"),
("m05", "Titanic", 1997, 194, "Romance", "Paramount Pictures", "p02");
```
INSERT
INTO Movies
VALUES ("m01", "Joe Black", 1998, 178, "Drama", "Universal Studio", "p01"),
("m02", "Titanic", 1997, 194, "Romance", "Paramount Pictures", "p02"),
("m03", "The Shawshank Redemption", 1994, 142, "Romance", "Paramount Pictures", "p02"),
("m04", "Titanic", 1997, 194, "Romance", "Paramount Pictures", "p02"),
("m05", "Titanic", 1997, 194, "Romance", "Paramount Pictures", "p02");
```
You can install the latest released version of RSQLite from CRAN with:
install.packages("RSQLite")
library(DBI)
```R
#TODO
library(DBI)
library(`nycflights13)
connection <- dbConnect(SQLite(), "flights.db")
dbListTables(con)
dbWriteTable(con, "airports", airports)
```
```R
#TODO
library(DBI)
library(`nycflights13)
connection <- dbConnect(SQLite(), "flights.db")
dbListTables(con)
dbWriteTable(con, "airports", airports)
```
library(DBI)
library(`nycflights13)
')'
>
;
```R
#TODO
library(DBI)
library(nycflights13)
connection <- dbConnect(SQLite(), "flights.db")
dbListTables(con)
dbWriteTable(con, "airports", airports)
```
library(DBI)
library(nycflights13)
connection <- dbConnect(SQLite(), "flights.db")
library(RSQLite)
connection <- dbConnect(SQLite(), "flights.db")
dbListTables(connection)
dbWriteTable(con, "airports", airports)
dbWriteTable(connection, "airports", airports)
dbListTables(connection)
dbWriteTable(connection, "planes", planes)
dbWriteTable(connection, "flights", flights)
dbListTables(connection)
dbDisconnect(connection)
load("~/Datasets/BRFSS_explore-master/BRFSS_explore-master/data/brfss2013.RData")
load("~/Datasets/BRFSS_explore-master/BRFSS_explore-master/data/brfss2013.RData")
View(brfss2013)
x <- read.delim("https://media.githubusercontent.com/media/HarjyotKaur/Data_Taracyc_Analysis/master/data/MASTERTABLE.txt")
str(x)
# data_loading.R
# Harjyot and Heather , November 2018
# Taracyc Oceans Project: Master Table
# This script loads the dataset from a url
# This script takes no arguments.
#
# Usage: Rscript data_loading.R
#
# read in data
master_data <- read.delim("https://media.githubusercontent.com/media/HarjyotKaur/Data_Taracyc_Analysis/master/data/MASTERTABLE.txt")
master_data.head()
# data_loading.R
# Harjyot and Heather , November 2018
# Tara Oceans Project: Master Table
# This script loads the dataset from a url
# This script takes no arguments.
#
# Usage: Rscript data_loading.R
#
# read in data
master_data <- read.delim("https://media.githubusercontent.com/media/HarjyotKaur/Data_Taracyc_Analysis/master/data/MASTERTABLE.txt")
head(master_data)
# data_load.R
# Harjyot and Heather, 17 Nov 2018
# Tara Oceans Project: Master Table
# This script loads the dataset from a url
# This script takes no arguments.
#
# Usage: Rscript data_load.R
# Read in data
master_data <- read.delim("https://media.githubusercontent.com/media/HarjyotKaur/Data_Taracyc_Analysis/master/data/MASTERTABLE.txt")
head(master_data)
length(master_data)
dim(master_data)
View(master_data)
unique(master_data$DEPTH)
unique(master_data$DEPTHM)
unique(master_data$DEPTH_OMZ)
library(tidyverse)
library(broom)
head(mtcars)
lm(mpg ~ disp, data=mtcars)
fit <- lm(mpg ~ disp, data=mtcars)
class(fit)
unclass(fit)
summary(fit)
unclasssummary(fit)
unclass(summary(fit))
glance(fit)
x <- glance(fit)
class(x)
tidy(fit)
augment(fit)
Draw an entity-relationship diagram to represent the information described  above. (You may draw this on paper, but it should be submitted electronically by taking a photo with your phone/camera/scanner and uploading; otherwise consider  R's [diagrammer](https://rich-iannone.github.io/DiagrammeR/) or the online [QuickDBD]( ).)
QuickDBD
```sql
-- TODO: Replace this comment with your answer.
CREATE VIEW view_titles
AS
SELECT primaryTitle, originalTitle, startYear, isAdult, startYear, runtimeMinutes, genres
FROM titles;
```
```sql
-- TODO: Replace this comment with your answer.
CREATE VIEW view_titles
AS
SELECT primaryTitle, startYear, isAdult, runtimeMinutes, averageRating
FROM titles;
```
```sql
-- TODO: Replace this comment with your answer.
CREATE VIEW view_titles
AS
SELECT primaryTitle, startYear,runtimeMinutes, averageRating
FROM titles;
```
CREATE VIEW view_titles
AS
SELECT primaryTitle, startYear,runtimeMinutes, averageRating
FROM titles;
CREATE VIEW view_titles
AS
SELECT primaryTitle, startYear,runtimeMinutes, averageRating
FROM titles;
CREATE VIEW view_people
AS
SELECT A.nconst as nconst_1, A.primaryName as name_1, A.birthyear as birthyear_1,
B.nconst as nconst_2, B.primaryName as name_2, B.birthyear as birthyear_2
FROM people A, people B
WHERE A.primaryName=B.primaryName AND
A.birthyear<>B.birthyear AND
A.birthyear is not NULL;
```sql
-- TODO: Replace this comment with your answer.
CREATE VIEW view_people
AS
SELECT A.nconst as nconst_1, A.name as name_1, A.birthyear as birthyear_1,
B.nconst as nconst_2, B.name as name_2, B.birthyear as birthyear_2
FROM people A, people B
WHERE A.name=B.name AND
A.birthyear<>B.birthyear AND
A.birthyear is not NULL;
```
CREATE VIEW view_people
AS
SELECT A.nconst as nconst_1, A.name as name_1, A.birthyear as birthyear_1,
B.nconst as nconst_2, B.name as name_2, B.birthyear as birthyear_2
FROM people A, people B
WHERE A.name=B.name AND
A.birthyear<>B.birthyear AND
A.birthyear is not NULL;
```sql
-- TODO: Replace this comment with your answer.
SELECT A.*, B.knownForTitles
FROM view_people, known
```
include_graphics(../results/figures/fig1_eda_sample_split.png)
include_graphics(../results/figures/fig1_eda_sample_split.png)
knitr::include_graphics(../results/figures/fig1_eda_sample_split.png)
knitr::include_graphics('../results/figures/fig1_eda_sample_split.png')
knitr::include_graphics('../results/figures/fig1_eda_sample_split.png')
knitr::include_graphics('../results/figures/fig1_eda_sample_split.png')
```{r, echo=FALSE,fig.cap=paste("Samples collected for Ocean DNA"}
knitr::include_graphics('../results/figures/fig1_eda_sample_split.png')
knitr::include_graphics('../results/figures/fig1_eda_sample_split.png')
knitr::include_graphics('../results/figures/fig1_eda_sample_split.png')
setwd("~/DSCI_522_heather_harjyot_taracyc_analysis")
setwd("~/DSCI_522_heather_harjyot_taracyc_analysis/doc")
knitr::include_graphics('../results/figures/fig4_eda_biological_pathways_spread_outliers.png',
'../results/figures/fig5_eda_depths_spread_outliers.png')
knitr::include_graphics(c('../results/figures/fig4_eda_biological_pathways_spread_outliers.png',
'../results/figures/fig5_eda_depths_spread_outliers.png'))
knitr::include_graphics(c('../results/figures/fig4_eda_biological_pathways_spread_outliers.png'
'../results/figures/fig5_eda_depths_spread_outliers.png'))
grid.arrange(fig_4,fig5)
knitr::include_graphics('../results/figures/fig4_eda_biological_pathways_spread_outliers.png')
knitr::include_graphics('../results/figures/fig5_eda_depths_spread_outliers.png')
knitr::include_graphics('../results/figures/fig4_eda_biological_pathways_spread_outliers.png')
knitr::include_graphics('../results/figures/fig5_eda_depths_spread_outliers.png')
knitr::include_graphics('../results/fig6_eda_mean_dna_across_categories.png')
knitr::include_graphics('../results/figures/fig6_eda_mean_dna_across_categories.png')
The mean abundance of viral DNA sequences is highest for biological pathways that occur in surface water layer.
knitr::include_graphics('../results/figures/fig7_results.png')
knitr::include_graphics('../results/figures/fig7_results.png')
knitr::include_graphics('../results/figures/fig7_results.png')
library(knitr)
results <- read.csv("../results/taracyc_results.csv")
kable(results)
knitr::include_graphics('../results/figures/fig6_eda_mean_dna_across_categories.png')
knitr::include_graphics('../results/figures/fig5_eda_depths_spread_outliers.png')
knitr::include_graphics('../results/figures/fig4_eda_biological_pathways_spread_outliers.png')
knitr::include_graphics('../results/figures/fig3_eda_biological_pathways_depth_dna_volume.png')
knitr::include_graphics('../results/figures/fig1_eda_sample_split.png')
library(knitr)
cleaned_data_snapshot <- read.csv("../data/taracyc_data_cleaned.csv")
kable(head(cleaned_data_snapshot,5))
